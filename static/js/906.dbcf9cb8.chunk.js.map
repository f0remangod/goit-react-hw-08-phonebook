{"version":3,"file":"static/js/906.dbcf9cb8.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/PhonebookComponents/PhonebookForm/PhonebookForm.styled.jsx","components/PhonebookComponents/PhonebookForm/PhonebookForm.jsx","components/PhonebookComponents/Filter/Filter.styled.jsx","components/PhonebookComponents/Filter/Filter.jsx","components/PhonebookComponents/ContactsItem/ContactsItem.styled.jsx","components/PhonebookComponents/ContactsItem/ContactsItem.jsx","components/PhonebookComponents/ContactsList/ContactsList.styled.jsx","components/PhonebookComponents/ContactsList/ContactsList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Heading = styled.h2`\n  font-size: 32px;\n  text-align: center;\n`;\nexport const Wrapper = styled.section`\n  width: 480px;\n  margin: auto;\n  padding: 30px;\n  background-color: #eaffea;\n  box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.75);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <Heading>{title}</Heading>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  margin-top: 20px;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n`;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Form, Btn } from './PhonebookForm.styled';\nimport { useState } from 'react';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from '../../../redux/contactsSlice';\n\nexport const PhonebookForm = () => {\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('no handler for such field');\n    }\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n\n    const alreadyExists = data.findIndex(item => {\n      const existingItem = item.name.toLowerCase();\n      const newItem = contact.name.toLowerCase();\n      return existingItem === newItem;\n    });\n\n    switch (alreadyExists >= 0) {\n      case true:\n        Notify.failure(`${contact.name} is already in contacts`);\n        break;\n      default:\n        await addContact(contact);\n    }\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        placeholder=\"Enter name\"\n        autoComplete=\"off\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleInputChange}\n        required\n      />\n      <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        placeholder=\"Enter phone number\"\n        autoComplete=\"off\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleInputChange}\n        required\n      />\n      <Btn type=\"submit\">Add contact</Btn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  height: 36px;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: inline-flex;\n  margin: 20px 0px 0px 95px;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n`;\n","import { FilterInput, FilterWrapper, Btn } from './Filter.styled';\nimport { changeFilter } from 'redux/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const { value } = event.currentTarget;\n    dispatch(changeFilter(value));\n  };\n\n  const clearFilterField = () => {\n    dispatch(changeFilter(''));\n  };\n\n  return (\n    <>\n      <FilterWrapper>\n        <label htmlFor=\"filter\">\n          <FilterInput\n            type=\"text\"\n            id=\"filter\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleFilterChange}\n          />\n        </label>\n        <Btn type=\"button\" onClick={clearFilterField}>\n          Clear\n        </Btn>\n      </FilterWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Name = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  width: 150px;\n  font-weight: 600;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid black;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { Name, Item, Btn } from './ContactsItem.styled';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\n\nexport const ContactsItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const [deleteContact, result] = useDeleteContactMutation();\n\n  return (\n    <>\n      <Item>\n        {!result.isLoading ? (\n          <>\n            <Name>{name}</Name>\n            <span>{number}</span>\n          </>\n        ) : (\n          <p style={{ color: 'grey' }}>Deleting contact...</p>\n        )}\n        <Btn\n          type=\"button\"\n          disabled={result.isLoading}\n          onClick={() => deleteContact(id)}\n        >\n          X\n        </Btn>\n      </Item>\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 20px;\n`;\n","import { ContactsItem } from 'components/PhonebookComponents/ContactsItem/ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { List } from './ContactsList.styled';\nimport { useGetContactsQuery } from '../../../redux/contactsSlice';\n\nexport const ContactsList = () => {\n  const { data } = useGetContactsQuery();\n\n  const filter = useSelector(state => state.filter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <List>\n      {filteredContacts.map(contact => {\n        return <ContactsItem key={contact.id} contact={contact}></ContactsItem>;\n      })}\n    </List>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { Section } from 'components/Section/Section';\nimport { PhonebookForm } from 'components/PhonebookComponents/PhonebookForm/PhonebookForm';\nimport { TailSpin } from 'react-loader-spinner';\nimport { Filter } from 'components/PhonebookComponents/Filter/Filter';\nimport { ContactsList } from 'components/PhonebookComponents/ContactsList/ContactsList';\nimport { useGetContactsQuery } from '../redux/contactsSlice';\n\nexport default function Contacts() {\n  const { data, error, isLoading } = useGetContactsQuery();\n\n  return (\n    <>\n      <Helmet>\n        <title>PHONEBOOK</title>\n      </Helmet>\n      <Section title=\"Add new contact\">\n        <PhonebookForm />\n      </Section>\n\n      {isLoading && (\n        <Section>\n          <TailSpin\n            height=\"380\"\n            width=\"380\"\n            color=\"#4fa94d\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        </Section>\n      )}\n      {error && (\n        <Section>\n          <p>Oops, soomething went wrong</p>\n        </Section>\n      )}\n      {!isLoading && !error && data.length > 0 && (\n        <>\n          <Section title=\"Filter contacts\">\n            <Filter />\n          </Section>\n\n          <Section title=\"Saved contacts\">\n            <ContactsList />\n          </Section>\n        </>\n      )}\n      {!isLoading && !error && data.length === 0 && (\n        <Section>\n          <p>There are no saved contacts</p>\n        </Section>\n      )}\n    </>\n  );\n}\n"],"names":["Heading","styled","Wrapper","Section","title","children","Form","Btn","PhonebookForm","data","useGetContactsQuery","useAddContactMutation","addContact","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","console","log","handleFormSubmit","preventDefault","contact","alreadyExists","findIndex","item","toLowerCase","Notify","resetForm","onSubmit","type","placeholder","autoComplete","pattern","onChange","required","FilterInput","FilterWrapper","Filter","filter","useSelector","state","dispatch","useDispatch","htmlFor","id","changeFilter","onClick","Name","Item","ContactsItem","useDeleteContactMutation","deleteContact","result","isLoading","style","color","disabled","List","ContactsList","filteredContacts","normalizedFilter","trim","includes","getFilteredContacts","map","Contacts","error","Helmet","height","width","ariaLabel","radius","wrapperStyle","wrapperClass","visible","length"],"sourceRoot":""}